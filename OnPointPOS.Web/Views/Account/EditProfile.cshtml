@model ProfileViewModel
@{
    ViewBag.Title = "EditProfile";
    Layout = null;
}
@section BreadCrumb {
    <li class="crumb-link" id="indexpage"><a href="/Account/Index" class="ajax-disable"> User</a></li>
    <li class="crumb-trail" id="currentpage">Update Profile</li>
}

           @using (Html.BeginForm("EditProfile", "Account",  FormMethod.Post, FormMethod.Post, new { role = "form", @class = "form-horizontal", enctype = "multipart/form-data"  }))
            {
                @Html.AntiForgeryToken()

                @Html.HiddenFor(model => model.Id)
                @Html.HiddenFor(model => model.UserId)


                <div class="form-horizontal">

                    @Html.ValidationSummary(true)
                    <div class="alert alert-success" id="msgDiv"></div>
                    <div class="alert alert-danger" id="divError"></div>
                    @*<div class="alert alert-success" id="msgDiv"></div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.Email, new { @class = "control-label col-lg-3" })
                        <div class="col-lg-9">                            @Html.TextBoxFor(model => model.Email, new { @class = "form-control", @readonly = true })
                            @Html.ValidationMessageFor(model => model.Email)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.FirstName, new { @class = "control-label col-lg-3" })
                       
                        <div class="col-lg-9">
                            @Html.TextBoxFor(model => model.FirstName, new { @class = "form-control", @placeholder = "Type first name here..." })
                            @Html.ValidationMessageFor(model => model.FirstName)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LastName, new { @class = "control-label col-lg-3" })
                        <div class="col-lg-9">
                            @Html.TextBoxFor(model => model.LastName, new { @class = "form-control", @placeholder = "Type last name here..." })
                            @Html.ValidationMessageFor(model => model.LastName)

                        </div>
                    </div>

                    @*<div class="form-group">
                        @Html.LabelFor(model => model.NickName, new { @class = "control-label col-lg-3" })
                        <div class="col-lg-9">
                            @Html.TextBoxFor(model => model.NickName, new { @class = "form-control", @placeholder = "Type nick name here..." })
                            @Html.ValidationMessageFor(model => model.NickName)
                        </div>
                    </div>*@

                    <div class="form-group">
                        @Html.LabelFor(model => model.Address, new { @class = "control-label col-lg-3" })
                        <div class="col-lg-9">
                            @Html.TextBoxFor(model => model.Address, new { @class = "form-control", @placeholder = "Type address here..." })
                            @Html.ValidationMessageFor(model => model.Address)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.City, new { @class = "control-label col-lg-3" })
                        <div class="col-lg-9">
                            @Html.TextBoxFor(model => model.City, new { @class = "form-control", @placeholder = "Type city here..." })
                            @Html.ValidationMessageFor(model => model.City)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Country, new { @class = "control-label col-lg-3" })
                        <div class="col-lg-9">
                            @Html.TextBoxFor(model => model.Country, new { @class = "form-control", @placeholder = "Type country here..." })
                            @Html.ValidationMessageFor(model => model.Country)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ZipCode, new { @class = "control-label col-lg-3" })
                        <div class="col-lg-9">
                            @Html.TextBoxFor(model => model.ZipCode, new { @class = "form-control", @placeholder = "Type zip code here..." })
                            @Html.ValidationMessageFor(model => model.ZipCode)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.MobileNo, new { @class = "control-label col-lg-3" })
                        <div class="col-lg-9">
                            @Html.TextBoxFor(model => model.MobileNo, new { @class = "form-control", @placeholder = "Type mobile number here..." })
                            @Html.ValidationMessageFor(model => model.MobileNo)
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ProfilePic, new { @class = "control-label col-lg-3" })
                        <div class="col-lg-9">
                            <input type="file" title="file" id="FileUpload" name="Photo" onchange="readURL(this);" />
                            <img src="@Model.ProfilePic" id="displayphoto" alt="" class="img-responsive ProfilePicture" style="height:70px;width:70px;margin-top:10px;" />


                        </div>
                    </div>

                    @*<div class="form-group">
                        @Html.LabelFor(model => model.Activated, new { @class = "control-label col-lg-3" })
                        <div class="col-lg-9">
                            @Html.EditorFor(model => model.Activated)
                            @Html.ValidationMessageFor(model => model.Activated)
                        </div>
                    </div>*@

                    <div class="form-group">
                        <div class="col-lg-12">
                            <div class="pull-right">
                                <input type="button" id="btnUpdate" value="Save" class="btn bg-purple" />
                                <input type="button" id="btnCancel" value="Cancel" class="btn bg-purple" />
                            </div>
                        </div>
                    </div>
                </div>
            }
       



    <script>

        $(document).ready(function () {

            if (!$('#menuActivities').hasClass('menu-open')) {

                $('#menuActivities').attr('style', '').toggleClass('menu-open');

            }
            $('#deviceId').removeClass('active');
        });

        function readURL(input) {
            if (input.files && input.files[0]) {
                var reader = new FileReader();

                reader.onload = function (e) {
                    $('#displayphoto')
                        .attr('src', e.target.result);
                    //.width(40)
                    //.height(40)
                };

                reader.readAsDataURL(input.files[0]);
            }
        }




        $("#msgDiv").hide();
        $("#divError").hide();
        $("#btnCancel").click(function () {

            $('.modal-dialog').hide();
            $('.modal-backdrop').hide();
        });

        $("#btnUpdate").click(function () {

          

            if ($('#Email').val() == '') {
                alert('Specify Email');
                $('#Email').focus();
                return;
            }

            if ($('#FirstName').val() == '') {
                alert('Specify first name');
                $('#FirstName').focus();
                return;
            }

            if ($('#LastName').val() == '') {
                alert('Specify last name');
                $('#LastName').focus();
                return;
            }
            var formData = new FormData();
            var totalFiles = document.getElementById("FileUpload").files.length;
           
            for (var i = 0; i < totalFiles; i++) {
                var file = document.getElementById("FileUpload").files[i];

                formData.append("FileUpload", file);
            }
            formData.append("Id", $("#Id").val());
            formData.append("Email", $("#Email").val());
            formData.append("FirstName", $("#FirstName").val());
            formData.append("LastName", $("#LastName").val());
            formData.append("City", $("#City").val());
            formData.append("Address", $("#Address").val());
            formData.append("Country", $("#Country").val());
            formData.append("ZipCode", $("#ZipCode").val());
            formData.append("MobileNo", $("#MobileNo").val());

     


            $.ajax({


                url: '@Url.Action("UpdateProfile", "Account")',
                type: "POST",
                data: formData,
                dataType: 'json',
                contentType: false,
                processData: false,
                success: function (result) {
                    $("#msgDiv").show();
                    $('#msgDiv').html(result.Message);
                    $("#msgDiv").focus();
                    var tId;

                    $("#msgDiv").hide().slideDown();
                    clearTimeout(tId);
                    tId = setTimeout(function () {
                        $("#msgDiv").hide();

                        $('.modal-dialog').hide();
                        $('.modal-backdrop').hide();

                        refreshGrid();

                       
                    }, 1500);


                }

            });

        });


    </script>

    
