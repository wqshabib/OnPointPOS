@model ItemViewModel

<style>
    .top_space {
        margin-top: 25px;
        font-size: 11px !important;
    }

    .top_space_without_font {
        margin-top: 25px;
    }

    .sm_label {
        font-size: 11px !important;
    }
</style>

<link href="~/Content/style.css" rel="stylesheet" />
<div style="margin:0px;">
    <header id="topbar">
        <div class="topbar-left">

        </div>
        <div class="topbar-right">
            <div class="pull-right">
                <button class="btn btn-primary fa fa-save" id="btnSaveTop" type="button"> @Resource.Save @Resource.Product</button>
            </div>
        </div>
    </header>

    <div class="panel mb25 mt5">

        @using (Html.BeginForm("Create", "Product", null, FormMethod.Post, new { id = "form1", role = "form", @class = "" }))
        {
            @Html.AntiForgeryToken()
            @Html.ValidationSummary(true)
            @Html.HiddenFor(m => m.SelectedIds);

            <div class="alert alert-success" style="display:none;" id="messageBox"></div>
            <div class="alert alert-danger" style="display:none;" id="divError"></div>

            <div class="panel-body p20 pb10" style="border-top:0px">
                <div class="tab-content pn br-n admin-form">
                    <div class="row">
                        <div class="col-md-7">
                            <div class="panel">
                                <div class="panel-heading" style="padding-top:0px;padding-bottom:0px"> <span class="panel-title"> <span class="glyphicon glyphicon-pencil"></span> @Resource.Add @Resource.Product </span> </div>
                                <div class="panel-body">
                                    <div class="section row">
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label for="username">@Resource.Name<span style="color:#ee3636">*</span></label>
                                                @Html.TextBoxFor(model => model.Description, new { @class = "event-name gui-input br-light light", @placeholder = Resource.Product + " " + Resource.Name, Title = Resource.Product + " " + Resource.Name })
                                                @Html.ValidationMessageFor(model => model.Description)
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label for="username">@Resource.Barcode</label>
                                                @Html.TextBoxFor(model => model.BarCode, new { @class = "event-name gui-input br-light light", @placeholder = Resource.Barcode, Title = Resource.Barcode })
                                                @Html.ValidationMessageFor(model => model.BarCode)
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label for="username">@Resource.Price ink moms<span style="color:#ee3636">*</span></label>
                                                @Html.TextBoxFor(model => model.Price, new { @Value = (Model.Price > 0) ? Model.Price.ToString() : string.Empty, @class = "event-name gui-input br-light light", @placeholder = Resource.Product + " " + Resource.Price, Title = Resource.Product + " " + Resource.Price })
                                                @Html.ValidationMessageFor(model => model.Price)
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label for="username">@Resource.PurchasePrice ex moms</label>
                                                @Html.TextBoxFor(model => model.PurchasePrice, new { @class = "event-name gui-input br-light light", @placeholder = "Cost Price", Title = "Cost Pris" })
                                                @Html.ValidationMessageFor(model => model.PurchasePrice)
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label for="inputStandard" name="lblMargin" id="lblMargin" class="control-label pt10">Marginal:SEK XXX        XX %</label>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label for="inputStandard" name="lblMarginPurchasePrice" id="lblMarginPurchasePrice" class="control-label pt10">Marginal:SEK XXX        XX %</label>
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label for="username">@Resource.SKU</label>
                                                @Html.TextBoxFor(model => model.SKU, new { @class = "event-name gui-input br-light light", @placeholder = Resource.Product + " " + Resource.SKU, Title = Resource.Product + " " + Resource.SKU })
                                                @Html.ValidationMessageFor(model => model.SKU)
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label for="username">@Resource.Accounting<span style="color:#ee3636">*</span></label>
                                                @Html.DropDownListFor(model => model.AccountingId, Model.Accountings, new { @class = "field select" })
                                                @Html.ValidationMessageFor(model => model.AccountingId)
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label for="username">@Resource.unit</label>
                                                @Html.DropDownListFor(model => model.Unit, Model.UnitTypes, new { @class = "field select" })
                                                @Html.ValidationMessageFor(model => model.Unit)
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label for="username">@Resource.Printer</label>
                                                @Html.DropDownListFor(model => model.PrinterId, Model.Printers, new { @class = "field select" })
                                                @Html.ValidationMessageFor(model => model.PrinterId)
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label for="username">@Resource.ColorCode</label>
                                                <div class="input-group colorpicker-component demo demo-auto cursor colorpicker-element">
                                                    <span class="input-group-addon">
                                                        <i style="background-color: rgb(163, 51, 51);"></i>
                                                    </span>
                                                    @Html.TextBoxFor(model => model.ColorCode, new { @class = "form-control demo demo-1 demo-auto", @placeholder = Resource.ColorCode, Title = Resource.ColorCode })
                                                    @Html.ValidationMessageFor(model => model.ColorCode)

                                                </div>
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label for="username">@Resource.Stock</label>
                                                @Html.TextBoxFor(model => model.StockQuantity, new { @class = "event-name gui-input br-light light", @placeholder = "Stock Quantity", Title = "Stock Quantity" })
                                                @Html.ValidationMessageFor(model => model.StockQuantity)
                                            </div>
                                        </div>
                                        <div class="col-md-3">
                                            <div class="form-group">
                                                <label for="MinStockLevel">Minimum @Resource.Stock @Resource.Qty</label>
                                                @Html.TextBoxFor(model => model.MinStockLevel, new { @class = "event-name gui-input br-light light", @placeholder = "Min Stock Level", Title = "Min Stock Level" })
                                                @Html.ValidationMessageFor(model => model.MinStockLevel)
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label for="username">@Resource.PLU</label>
                                                @Html.TextBoxFor(model => model.PLU, new { @class = "event-name gui-input br-light light", @placeholder = Resource.Product + " " + Resource.PLU, Title = Resource.Product + " " + Resource.PLU })
                                                @Html.ValidationMessageFor(model => model.PLU)
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label for="username">@Resource.Weight</label>
                                                @Html.TextBoxFor(model => model.Weight, new { @class = "event-name gui-input br-light light", @placeholder = @Resource.Weight, Title = @Resource.Weight })
                                                @Html.ValidationMessageFor(model => model.Weight)
                                            </div>
                                        </div>
                                        @*<div class="col-md-3">
                                                <div class="form-group">
                                                    <label for="username">Level</label>
                                                    @Html.TextBoxFor(model => model.ReorderLevelQuantity, new { @class = "event-name gui-input br-light light", @placeholder = "Reorder Level Quantity", Title = "Reorder Level Quantity" })
                                                    @Html.ValidationMessageFor(model => model.ReorderLevelQuantity)
                                                </div>
                                            </div>*@
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label for="username">@Resource.Temp_Price_Start_Date</label>
                                                @Html.EditorFor(model => model.TempPriceStart, new { @class = "event-name gui-input br-light light", @placeholder = @Resource.Temp_Price_Start_Date, Title = @Resource.Temp_Price_Start_Date })
                                                @Html.ValidationMessageFor(model => model.TempPriceStart)
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label for="username">@Resource.Temp_Price_End_Date</label>
                                                @Html.EditorFor(model => model.TempPriceEnd, new { @class = "event-name gui-input br-light light", @placeholder = @Resource.Temp_Price_End_Date, Title = @Resource.Temp_Price_End_Date })
                                                @Html.ValidationMessageFor(model => model.TempPriceEnd)
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group">
                                                <label for="username">@Resource.Temp_Price</label>
                                                @Html.TextBoxFor(model => model.TempPrice, new { @class = "event-name gui-input br-light light", @placeholder = @Resource.Temp_Price, Title = @Resource.Temp_Price })
                                                @Html.ValidationMessageFor(model => model.TempPrice)
                                            </div>
                                        </div>
                                        <div class="col-md-6">
                                            <div class="form-group top_space">
                                                <label for="inputStandard" name="lblMarginTemp" id="lblMarginTemp" class="control-label pt10 sm_label">Tillfälligt pris marginal:SEK XXX        XX %</label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="section row">
                                        <div class="col-md-6 text-left">
                                            <div class="form-group">
                                                @Html.CheckBoxFor(model => model.IsPantEnabled, new { @type = "checkbox" })
                                                <label for="" class="control-label pt10"> @Resource.PantProduct </label>
                                            </div>
                                        </div>
                                        <div class="col-md-6" id="pantProduct" style="display:none">
                                            <div class="form-group">
                                                <label class="field select">
                                                    @Html.DropDownList("PantProductId", (IEnumerable<SelectListItem>)ViewBag.PantProduct, "Select PANT Product", new { @class = "form-control" })
                                                    <i class="arrow"></i>
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="section row">
                                        <div class="col-sm-3 text-left">
                                            <label>
                                                @*<input type="checkbox" name="info" id="chkpricelock" checked="@Model.PriceLock==true?'checked'">*@
                                                @Html.CheckBoxFor(model => model.AskPrice, new { @type = "checkbox" })
                                                @Resource.Ask @Resource.Price
                                            </label>
                                        </div>
                                        <div class="col-sm-3 text-left">
                                            <label>
                                                @*<input type="checkbox" name="info" id="chkpricelock" checked="@Model.PriceLock==true?'checked'">*@
                                                @Html.CheckBoxFor(model => model.AskWeight, new { @type = "checkbox" })
                                                @Resource.Ask @Resource.Weight
                                            </label>
                                        </div>
                                        <div class="col-sm-3 text-left">
                                            <label>
                                                @Html.CheckBoxFor(model => model.AskVolume, new { @type = "checkbox" })
                                                @Resource.Ask  @Resource.Volume
                                            </label>
                                        </div>
                                    </div>
                                    <div class="section row">
                                        <div class="col-sm-3 text-left">
                                            <label>
                                                @*<input type="checkbox" name="info" id="chkplaceholder" checked="@Model.PlaceHolder==true?'checked'">*@
                                                @Html.CheckBoxFor(model => model.PlaceHolder, new { @type = "checkbox" })
                                                @Resource.Placeholder
                                            </label>
                                        </div>
                                        <div class="col-sm-3 text-left">
                                            <label>
                                                @* <input type="checkbox" name="info" id="chkactive" checked="@Model.Active==true?'checked'">*@
                                                @Html.CheckBoxFor(model => model.Active, new { @type = "checkbox" })
                                                @Resource.Active
                                            </label>
                                        </div>
                                        <div class="col-sm-3 text-left">
                                            <label>
                                                @* <input type="checkbox" name="info" id="chkactive" checked="@Model.Active==true?'checked'">*@
                                                @Html.CheckBoxFor(model => model.ShowItemButton, new { @type = "checkbox" })
                                                @Resource.ShowButton
                                            </label>
                                        </div>
                                    </div>
                                    <div class="section row">
                                        <div class="col-sm-3 text-left">
                                            <label>
                                                @*<input type="checkbox" name="info" id="chkpricelock" checked="@Model.PriceLock==true?'checked'">*@
                                                @Html.CheckBoxFor(model => model.PriceLock, new { @type = "checkbox" })
                                                @Resource.Price @Resource.Lock
                                            </label>
                                        </div>
                                        <div class="col-sm-3 text-left">
                                            <label>
                                                @* <input type="checkbox" name="info" id="chkactive" checked="@Model.Active==true?'checked'">*@
                                                @Html.CheckBoxFor(model => model.NeedIngredient, new { @type = "checkbox" })
                                                @Resource.Ingredient
                                            </label>
                                        </div>
                                        <div class="col-sm-3 text-left">
                                            <label>
                                                @if (ViewBag.ShowBong)
                                                {
                                                    @Html.CheckBoxFor(model => model.Bong, new { @type = "checkbox" })
                                                    <label>
                                                        Bong
                                                    </label>
                                                }
                                            </label>
                                        </div>
                                        <div class="col-sm-3 text-left">
                                            <label>
                                                @* <input type="checkbox" name="info" id="chkactive" checked="@Model.Active==true?'checked'">*@
                                                @Html.CheckBoxFor(model => model.DiscountAllowed, new { @type = "checkbox" })
                                                @Resource.DiscountAllowed
                                            </label>
                                        </div>
                                    </div>
                                    <div class="section row">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-md-5">
                            <div class="panel">
                                <div class="panel-heading" style="padding-top:0px;padding-bottom:0px"> <span class="panel-title"> <span class="glyphicon glyphicon-pencil"></span> @Resource.Category </span> </div>
                                <div class="panel-body">
                                    <div id="frm-category" class="tree well">
                                        @Html.Partial("_TreeCategories", Model.SeedCategories)
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="panel-footer clearfix">
                <div class="pull-right">
                    <button class="btn btn-primary fa fa-save" type="button" id="btnSave"> @Resource.Save @Resource.Product</button>
                </div>
            </div>
        }
    </div>
</div>

<script>
    jQuery(document).ready(function () {
        //initializeing color picker
        $('.demo-auto').colorpicker();
    });

    $(document).ready(function () {
        $('#IsPantEnabled:checkbox').change(function () {
            if ($(this).prop("checked") == true) {
                $('#pantProduct').show();
            } else if ($(this).prop("checked") == false) {
                $('#pantProduct').hide();
            }
        });

        $('#PurchasePrice').keyup(function () {
            UpdateMargin();
        });

        $('#Price').keyup(function () {
            UpdateMargin();
        });

        $('#TempPrice').keyup(function () {
            UpdateTempMargin();
        });

        $("#AccountingId").change(function () {
            UpdateMargin();
            UpdateTempMargin();
        });
    });

    function parseFloatOpts(num, decimal, thousands) {
        var bits = num.split(decimal, 2),
            ones = bits[0].replace(new RegExp('\\' + thousands, 'g'), '');
        ones = parseFloat(ones, 10),
            decimal = parseFloat('0.' + bits[1], 10);
        return ones + decimal;
    }


    function UpdateMargin() {
        var moms = 0;
        var selectedAccounting = $("#AccountingId").find('option:selected').text();
        if (selectedAccounting.includes('25%')) {
            moms = 25.0;
        } else if (selectedAccounting.includes('12%')) {
            moms = 12.0;
        } else if (selectedAccounting.includes('6%')) {
            moms = 6.0;
        }

        var costPrice = $('#PurchasePrice').val();
        if (typeof costPrice !== 'undefined' && costPrice) {
            var costPrice2 = parseFloat(costPrice.replace(',', '.').replace(' ', ''));// parseFloatOpts(costPrice, ',', '.');
            var momsValue2 = parseFloat(costPrice2 * moms) / parseFloat(100 + moms);
            $('#lblMarginPurchasePrice').text('Moms Amount: SEK ' + momsValue2.toFixed(2) + '\xa0\xa0\xa0\xa0\xa0\xa0' + moms.toFixed(2) + ' %');
        }
        else {
            costPrice = '0.0';
            $('#lblMarginPurchasePrice').text('Moms Amount:');
        }

        var price = $('#Price').val();
        if (typeof price !== 'undefined' && price && price !== '') {

        }
        else {
            price = '0.0';
            $('#lblMargin').text('Marginal:');
            return;
        }

        var customerPrice = parseFloat(price.replace(',', '.').replace(' ', '')); //parseFloatOpts(price, ',', '.');
        var costPriceExMom = parseFloat(costPrice.replace(',', '.').replace(' ', ''));// parseFloatOpts(costPrice, ',', '.');

        var momsValue = parseFloat(customerPrice * moms) / parseFloat(100 + moms);
        var customerPriceExMoms = customerPrice - momsValue;
        var marginInSEK = customerPriceExMoms - costPriceExMom;

        var marginInPercentage = 100;

        if (costPriceExMom != 0)
            marginInPercentage = parseFloat(marginInSEK / customerPriceExMoms) * 100;

        $('#lblMargin').text('Marginal: SEK ' + marginInSEK.toFixed(2) + '\xa0\xa0\xa0\xa0\xa0\xa0' + marginInPercentage.toFixed(2) + ' %');
    }

    function UpdateTempMargin() {
        var costPrice = $('#PurchasePrice').val();
        if (typeof costPrice !== 'undefined' && costPrice) {

        } else {
            costPrice = '0.0';
        }

        var price = $('#TempPrice').val();
        if (typeof price !== 'undefined' && price && price !== '') {

        } else {
            price = '0.0';
            $('#lblMarginTemp').text('Tillfälligt pris marginal:');
            return;
        }

        var customerPrice = parseFloat(price.replace(',', '.').replace(' ', '')); //parseFloatOpts(price, ',', '.');
        var costPriceExMom = parseFloat(costPrice.replace(',', '.').replace(' ', ''));// parseFloatOpts(costPrice, ',', '.');

        var moms = 0;
        var selectedAccounting = $("#AccountingId").find('option:selected').text();
        if (selectedAccounting.includes('25%')) {
            moms = 25.0;
        } else if (selectedAccounting.includes('12%')) {
            moms = 12.0;
        } else if (selectedAccounting.includes('6%')) {
            moms = 6.0;
        }

        var momsValue = parseFloat(customerPrice * moms) / parseFloat(100 + moms);
        var customerPriceExMoms = customerPrice - momsValue;
        var marginInSEK = customerPriceExMoms - costPriceExMom;

        var marginInPercentage = 100;

        if (customerPriceExMoms != 0)
            marginInPercentage = parseFloat(marginInSEK / customerPriceExMoms) * 100;

        $('#lblMarginTemp').text('Tillfälligt pris marginal' + ': SEK ' + marginInSEK.toFixed(2) + '\xa0\xa0\xa0\xa0\xa0\xa0' + marginInPercentage.toFixed(2) + ' %');
    }

    $(function () {
        $('#Cataglog').addClass('active');
        $('#products').addClass('active');

        if (!$('#menuCatalog').hasClass('menu-open')) {
            $('#menuCatalog').attr('style', '').toggleClass('menu-open');
        }

        var selectArr = [];
        $('.tree-checkbox').click(function () {
            var dataid = $(this).attr('id');
            var idx = $.inArray(dataid, selectArr);
            if (idx == -1) {
                selectArr.push(dataid);
            } else {
                selectArr.splice(idx, 1);
            }

        });

        selectedPrimary = 0;

        $('.tree-checkbox-primary').click(function () {
			selectedPrimary  = $(this).attr('id');
        });

        $("#messageBox").hide();
        $("#divError").hide();

        $('#btnSave').click(function () {
			SaveProduct(selectArr, selectedPrimary);
        });

		$('#btnSaveTop').click(function () {
			SaveProduct(selectArr, selectedPrimary);
        });
    });

	function SaveProduct(selectArr, selectedPrimary) {
        $("#divError").html('');
        $("#divError").hide();

        if ($('#PlaceHolder').is(':checked') == false)
            if ($('#Description').val() == '') {
                //'Specify product name'
                $("#divError").html("@Resource.Specify  @Resource.Product  @Resource.Name");
                $("#divError").show();
                $('#Description').focus();
                return;
            }


        var cats = "";
        for (i = 0; i < selectArr.length; i++) {
            cats = cats + selectArr[i] + ",";
        }
        if (selectArr.length == 0) {

            $("#divError").html("@Resource.Please @Resource.Select @Resource.Category.");
            $("#divError").show();
            return;
        }

		if (selectedPrimary==""){
            $("#divError").html("@Resource.Please @Resource.Select Primary @Resource.Category.");
            $("#divError").show();
            return;
        }
	    var primary1 = false;
	    $("input[name=Primary]").each(function (index) {
	        if ($(this).prop("checked")){
	            primary1 = true;

	        }
	    });


        //var primary1 = $("input[name=Primary]").prop("checked");



	    if (!primary1) {
	        selectedPrimary = 0;
            @*$("#divError").html("@Resource.Please @Resource.Select Primary @Resource.Category.");
            $("#divError").show();
            return false;*@
        }
        var pantProductId = "";
        var isPantEnabled = false;
        if ($('#IsPantEnabled').is(":checked")) {
            pantProductId = $('#PantProductId').val();
            isPantEnabled = true;
            if (pantProductId == "") {
                alert("Please Select Pant Product ");
                return;
            }
            }
        var data = {
            Description: $('#Description').val(),
            BarCode: $('#BarCode').val(),
            Price: $('#Price').val(),
            PurchasePrice: $('#PurchasePrice').val(),
            AccountingId: $("#AccountingId").find('option:selected').val(),
            //  Tax: $('#TaxValue').val(),
           // Tax: $("#TaxValue").find('option:selected').val(),
            PLU: $('#PLU').val(),
            ColorCode: $('#ColorCode').val(),
            PrinterId: $('#PrinterId').val(),
            StockQuantity: $('#StockQuantity').val(),
            AskPrice: $('#AskPrice').is(':checked'),
            PriceLock: $('#PriceLock').is(':checked'),
            Active: $('#Active').is(':checked'),
            PlaceHolder: $('#PlaceHolder').is(':checked'),
            Bong: $('#Bong').is(':checked'),
            AskVolume: $('#AskVolume').is(':checked'),
            Unit: $("#Unit").find('option:selected').val(),
            ReorderLevelQuantity: 1, //$("#ReorderLevelQuantity").val(),
            AskWeight: $('#AskWeight').is(':checked'),
            ShowItemButton: $('#ShowItemButton').is(':checked'),
            NeedIngredient: $('#NeedIngredient').is(':checked'),
            DiscountAllowed: $('#DiscountAllowed').is(':checked'),
            SKU: $('#SKU').val(),
            TempPriceStart: $('#TempPriceStart').val(),
            TempPriceEnd: $('#TempPriceEnd').val(),
            TempPrice: $('#TempPrice').val(),
			SelectedIds: cats,
            selectedPrimary: selectedPrimary,
            PantProductId:pantProductId,
            IsPantEnabled: isPantEnabled,
            Weight: $('#Weight').val()
        };

        $.ajax({
            url: '@Url.Action("Create", "Product")',
            type: "POST",
            contentType: 'application/json',
            data: JSON.stringify(data),
            success: function (result) {
                var res = result.Message;
                var arr = res.split(':');
                if (arr[0] == "Success") {
                    $("#messageBox").show();
                    $('#messageBox').html(arr[1]);
                    var tId;

                    $("#messageBox").hide().slideDown();
                    clearTimeout(tId);
                    tId = setTimeout(function () {
                        $("#messageBox").hide();
                        // window.location = '/Product'

                        $("#ProductCreate").html('');
                        Search($('#filter-category').val());
                    }, 2000);
                } else {
                    $("#divError").show();
                    $('#divError').html(arr[1]);
                    var tId;

                    $("#divError").hide().slideDown();
                    clearTimeout(tId);
                    tId = setTimeout(function () {
                        $("#divError").hide();
                    }, 3000);
                }

                // $("#PartialProductList").html(result);
            }
        });
    }
</script>
